//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:2.0.50727.9172
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.ImageViewer.Explorer.Local {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ClearCanvas.ImageViewer.Explorer.Local.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to import the selected items because the local services are not running.
        ///Please ensure the &apos;{0}&apos; is running or contact your system administrator for assistance..
        /// </summary>
        public static string FormatMessageImportWorkItemServiceNotRunning {
            get {
                return ResourceManager.GetString("FormatMessageImportWorkItemServiceNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import.
        /// </summary>
        public static string ImportDicomFiles {
            get {
                return ResourceManager.GetString("ImportDicomFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open Activity Monitor.
        /// </summary>
        public static string LinkOpenActivityMonitor {
            get {
                return ResourceManager.GetString("LinkOpenActivityMonitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open.
        /// </summary>
        public static string MenuOpenFiles {
            get {
                return ResourceManager.GetString("MenuOpenFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to initiate an import of the selected items..
        /// </summary>
        public static string MessageFailedToImportSelection {
            get {
                return ResourceManager.GetString("MessageFailedToImportSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The specified file could not be found..
        /// </summary>
        public static string MessageFileNotFound {
            get {
                return ResourceManager.GetString("MessageFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} images failed to load..
        /// </summary>
        public static string MessageFormatImagesFailedToLoad {
            get {
                return ResourceManager.GetString("MessageFormatImagesFailedToLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Importing files from {0} location..
        /// </summary>
        public static string MessageFormatImportingFiles {
            get {
                return ResourceManager.GetString("MessageFormatImportingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Importing files from {0} locations..
        /// </summary>
        public static string MessageFormatImportingFilesPlural {
            get {
                return ResourceManager.GetString("MessageFormatImportingFilesPlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The specified path does not contain any files..
        /// </summary>
        public static string MessageNoFilesSelected {
            get {
                return ResourceManager.GetString("MessageNoFilesSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You do not have permission to open images in the viewer..
        /// </summary>
        public static string MessagePermissionToOpenFilesDenied {
            get {
                return ResourceManager.GetString("MessagePermissionToOpenFilesDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to open images..
        /// </summary>
        public static string MessageUnableToOpenImages {
            get {
                return ResourceManager.GetString("MessageUnableToOpenImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на My Computer.
        /// </summary>
        public static string MyComputer {
            get {
                return ResourceManager.GetString("MyComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open Dicom Files.
        /// </summary>
        public static string OpenDicomFilesVerbose {
            get {
                return ResourceManager.GetString("OpenDicomFilesVerbose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import DICOM files from the local file system.
        /// </summary>
        public static string TooltipImportDicomFiles {
            get {
                return ResourceManager.GetString("TooltipImportDicomFiles", resourceCulture);
            }
        }
    }
}
