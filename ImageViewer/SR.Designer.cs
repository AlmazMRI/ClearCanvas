//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:2.0.50727.9172
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.ImageViewer {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ClearCanvas.ImageViewer.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No.
        /// </summary>
        public static string BoolNo {
            get {
                return ResourceManager.GetString("BoolNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Yes.
        /// </summary>
        public static string BoolYes {
            get {
                return ResourceManager.GetString("BoolYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change.
        /// </summary>
        public static string CommandChange {
            get {
                return ResourceManager.GetString("CommandChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create multiline graphic.
        /// </summary>
        public static string CommandCreateMultilineGraphic {
            get {
                return ResourceManager.GetString("CommandCreateMultilineGraphic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create rectangle graphic.
        /// </summary>
        public static string CommandCreateRectangleGraphic {
            get {
                return ResourceManager.GetString("CommandCreateRectangleGraphic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create ROI graphic.
        /// </summary>
        public static string CommandCreateROIGraphic {
            get {
                return ResourceManager.GetString("CommandCreateROIGraphic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete.
        /// </summary>
        public static string CommandDelete {
            get {
                return ResourceManager.GetString("CommandDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Edit Text.
        /// </summary>
        public static string CommandEditText {
            get {
                return ResourceManager.GetString("CommandEditText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Move.
        /// </summary>
        public static string CommandMove {
            get {
                return ResourceManager.GetString("CommandMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Move control point.
        /// </summary>
        public static string CommandMoveControlPoint {
            get {
                return ResourceManager.GetString("CommandMoveControlPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Move graphic.
        /// </summary>
        public static string CommandMoveGraphic {
            get {
                return ResourceManager.GetString("CommandMoveGraphic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Resize.
        /// </summary>
        public static string CommandResize {
            get {
                return ResourceManager.GetString("CommandResize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stretch.
        /// </summary>
        public static string CommandStretch {
            get {
                return ResourceManager.GetString("CommandStretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Blue.
        /// </summary>
        public static string DescriptionBlueColorMap {
            get {
                return ResourceManager.GetString("DescriptionBlueColorMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (None).
        /// </summary>
        public static string DescriptionGrayscaleColorMap {
            get {
                return ResourceManager.GetString("DescriptionGrayscaleColorMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Green.
        /// </summary>
        public static string DescriptionGreenColorMap {
            get {
                return ResourceManager.GetString("DescriptionGreenColorMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Palette Color.
        /// </summary>
        public static string DescriptionPaletteColorMap {
            get {
                return ResourceManager.GetString("DescriptionPaletteColorMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Prefetches image data in a display set when display set becomes visible..
        /// </summary>
        public static string DescriptionPrefetchingStrategyVisibleDisplaySet {
            get {
                return ResourceManager.GetString("DescriptionPrefetchingStrategyVisibleDisplaySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Presentation Lut.
        /// </summary>
        public static string DescriptionPresentationLut {
            get {
                return ResourceManager.GetString("DescriptionPresentationLut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Red.
        /// </summary>
        public static string DescriptionRedColorMap {
            get {
                return ResourceManager.GetString("DescriptionRedColorMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1/centimetre.
        /// </summary>
        public static string DescriptionUnits1cm {
            get {
                return ResourceManager.GetString("DescriptionUnits1cm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на becquerels/millilitre.
        /// </summary>
        public static string DescriptionUnitsBqml {
            get {
                return ResourceManager.GetString("DescriptionUnitsBqml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на square centimetre.
        /// </summary>
        public static string DescriptionUnitsCm2 {
            get {
                return ResourceManager.GetString("DescriptionUnitsCm2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на square centimetre/millilitre.
        /// </summary>
        public static string DescriptionUnitsCm2ml {
            get {
                return ResourceManager.GetString("DescriptionUnitsCm2ml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на counts.
        /// </summary>
        public static string DescriptionUnitsCnts {
            get {
                return ResourceManager.GetString("DescriptionUnitsCnts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на counts/second.
        /// </summary>
        public static string DescriptionUnitsCps {
            get {
                return ResourceManager.GetString("DescriptionUnitsCps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на grams/millilitre.
        /// </summary>
        public static string DescriptionUnitsGml {
            get {
                return ResourceManager.GetString("DescriptionUnitsGml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hounsfield units.
        /// </summary>
        public static string DescriptionUnitsHU {
            get {
                return ResourceManager.GetString("DescriptionUnitsHU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на milligrams/minute/millilitre.
        /// </summary>
        public static string DescriptionUnitsMgminml {
            get {
                return ResourceManager.GetString("DescriptionUnitsMgminml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на millilitre/grams.
        /// </summary>
        public static string DescriptionUnitsMlg {
            get {
                return ResourceManager.GetString("DescriptionUnitsMlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на millilitre/minute/grams.
        /// </summary>
        public static string DescriptionUnitsMlming {
            get {
                return ResourceManager.GetString("DescriptionUnitsMlming", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на millilitre/minute/millilitre.
        /// </summary>
        public static string DescriptionUnitsMlminml {
            get {
                return ResourceManager.GetString("DescriptionUnitsMlminml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на millilitre/millilitre.
        /// </summary>
        public static string DescriptionUnitsMlml {
            get {
                return ResourceManager.GetString("DescriptionUnitsMlml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1/1000 optical density.
        /// </summary>
        public static string DescriptionUnitsOD {
            get {
                return ResourceManager.GetString("DescriptionUnitsOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на percent.
        /// </summary>
        public static string DescriptionUnitsPcnt {
            get {
                return ResourceManager.GetString("DescriptionUnitsPcnt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на proportional to counts.
        /// </summary>
        public static string DescriptionUnitsPropcnts {
            get {
                return ResourceManager.GetString("DescriptionUnitsPropcnts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на proportional to counts/second.
        /// </summary>
        public static string DescriptionUnitsPropcps {
            get {
                return ResourceManager.GetString("DescriptionUnitsPropcps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на standard deviations.
        /// </summary>
        public static string DescriptionUnitsStddev {
            get {
                return ResourceManager.GetString("DescriptionUnitsStddev", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на micromoles/minute/millilitre.
        /// </summary>
        public static string DescriptionUnitsUmolminml {
            get {
                return ResourceManager.GetString("DescriptionUnitsUmolminml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на micromoles/millilitre.
        /// </summary>
        public static string DescriptionUnitsUmolml {
            get {
                return ResourceManager.GetString("DescriptionUnitsUmolml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на unknown.
        /// </summary>
        public static string DescriptionUnitsUnspecified {
            get {
                return ResourceManager.GetString("DescriptionUnitsUnspecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Additional mouse tool assignments must be modified ({0})..
        /// </summary>
        public static string ExceptionAdditionalMouseToolAssignmentsMustBeModified {
            get {
                return ResourceManager.GetString("ExceptionAdditionalMouseToolAssignmentsMustBeModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на AnnotationItem has no display name: {0}..
        /// </summary>
        public static string ExceptionFormatAnnotationItemHasNoDisplayName {
            get {
                return ResourceManager.GetString("ExceptionFormatAnnotationItemHasNoDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ImageBufferWin32 is not supported on non-Win32 platforms..
        /// </summary>
        public static string ExceptionImageBufferWin32NotSupported {
            get {
                return ResourceManager.GetString("ExceptionImageBufferWin32NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Image is not grayscale..
        /// </summary>
        public static string ExceptionImageIsNotGrayscale {
            get {
                return ResourceManager.GetString("ExceptionImageIsNotGrayscale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid pixel data (expected size: {0} bytes, actual size: {1} bytes)..
        /// </summary>
        public static string ExceptionIncorrectPixelDataSize {
            get {
                return ResourceManager.GetString("ExceptionIncorrectPixelDataSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid Annotation Layout XML ({0})..
        /// </summary>
        public static string ExceptionInvalidAnnotationLayoutXml {
            get {
                return ResourceManager.GetString("ExceptionInvalidAnnotationLayoutXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid Filtered Annotation Layout XML ({0})..
        /// </summary>
        public static string ExceptionInvalidFilteredAnnotationLayoutXml {
            get {
                return ResourceManager.GetString("ExceptionInvalidFilteredAnnotationLayoutXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ({0},{1},{2},{3}) is an invalid normalized rectangle.  Normalized rectangle coordinates must be between 0.0 and 1.0 with Right &gt; Left, Bottom &gt; Top..
        /// </summary>
        public static string ExceptionInvalidNormalizedRectangle {
            get {
                return ResourceManager.GetString("ExceptionInvalidNormalizedRectangle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ({0},{1},{2},{3}) is an invalid parent rectangle.  Parent rectangle must be such that all coordinates are positive with Right &gt; Left, Bottom &gt; Top..
        /// </summary>
        public static string ExceptionInvalidParentRectangle {
            get {
                return ResourceManager.GetString("ExceptionInvalidParentRectangle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Patient ID must not be empty..
        /// </summary>
        public static string ExceptionInvalidPatientID {
            get {
                return ResourceManager.GetString("ExceptionInvalidPatientID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rotation value must be 0, 90, 180 or 270..
        /// </summary>
        public static string ExceptionInvalidRotationValue {
            get {
                return ResourceManager.GetString("ExceptionInvalidRotationValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} is an invalid standard path item..
        /// </summary>
        public static string ExceptionInvalidStandardPathItem {
            get {
                return ResourceManager.GetString("ExceptionInvalidStandardPathItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stride improperly calculated (correct stride = {0}, calculated stride = {1})..
        /// </summary>
        public static string ExceptionInvalidStride {
            get {
                return ResourceManager.GetString("ExceptionInvalidStride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The layout of the physical workspace is either non-rectangular or has not been set..
        /// </summary>
        public static string ExceptionLayoutIsNotRectangular {
            get {
                return ResourceManager.GetString("ExceptionLayoutIsNotRectangular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Linear Luts have no settable data..
        /// </summary>
        public static string ExceptionLinearLutDataCannotBeSet {
            get {
                return ResourceManager.GetString("ExceptionLinearLutDataCannotBeSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на LUT index out of range (index = {0})..
        /// </summary>
        public static string ExceptionLUTIndexOutOfRange {
            get {
                return ResourceManager.GetString("ExceptionLUTIndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Output range of previous LUT does not match input range of current LUT..
        /// </summary>
        public static string ExceptionLUTInputOutputRange {
            get {
                return ResourceManager.GetString("ExceptionLUTInputOutputRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Output range of last LUT is not 8 bits..
        /// </summary>
        public static string ExceptionLUTLastOutputRange {
            get {
                return ResourceManager.GetString("ExceptionLUTLastOutputRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Minimum input value greater than or equal to maximum input value..
        /// </summary>
        public static string ExceptionLUTMinGreaterThanEqualToMax {
            get {
                return ResourceManager.GetString("ExceptionLUTMinGreaterThanEqualToMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot generate composite LUT because no LUTs have been added yet..
        /// </summary>
        public static string ExceptionLUTNotAdded {
            get {
                return ResourceManager.GetString("ExceptionLUTNotAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The maximum output value is not settable..
        /// </summary>
        public static string ExceptionMaximumOutputValueIsNotSettable {
            get {
                return ResourceManager.GetString("ExceptionMaximumOutputValueIsNotSettable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The minimum output value is not settable..
        /// </summary>
        public static string ExceptionMinimumOutputValueIsNotSettable {
            get {
                return ResourceManager.GetString("ExceptionMinimumOutputValueIsNotSettable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The minimum and maximum input values have not been set..
        /// </summary>
        public static string ExceptionMinMaxInputValuesNotSet {
            get {
                return ResourceManager.GetString("ExceptionMinMaxInputValuesNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You must override SetMemento in order to restore state from a previous call to CreateMemento..
        /// </summary>
        public static string ExceptionMustOverrideSetMemento {
            get {
                return ResourceManager.GetString("ExceptionMustOverrideSetMemento", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Is the ImageBox to which this Tile belongs supposed to be empty?.
        /// </summary>
        public static string ExceptionNoDisplaySetAssociatedWithImageBoxTile {
            get {
                return ResourceManager.GetString("ExceptionNoDisplaySetAssociatedWithImageBoxTile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Is the tile supposed to be empty?.
        /// </summary>
        public static string ExceptionNoPresentationImageAssociatedWithTile {
            get {
                return ResourceManager.GetString("ExceptionNoPresentationImageAssociatedWithTile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No SOPs exist in this series.  SeriesDescription cannot be determined..
        /// </summary>
        public static string ExceptionNoSopsExistInSeries {
            get {
                return ResourceManager.GetString("ExceptionNoSopsExistInSeries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Object must be of Type Single..
        /// </summary>
        public static string ExceptionObjectMustBeSingleType {
            get {
                return ResourceManager.GetString("ExceptionObjectMustBeSingleType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sop Instance validation failed..
        /// </summary>
        public static string ExceptionSopInstanceValidationFailed {
            get {
                return ResourceManager.GetString("ExceptionSopInstanceValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на For undo support, your StatefulGraphic subclass must implement IMemorable..
        /// </summary>
        public static string ExceptionStatefulGraphicMustBeIMemorable {
            get {
                return ResourceManager.GetString("ExceptionStatefulGraphicMustBeIMemorable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} [C:{1:F2}% B:{2:F2}%].
        /// </summary>
        public static string FormatAdjustableDataLutDescription {
            get {
                return ResourceManager.GetString("FormatAdjustableDataLutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:F1}°.
        /// </summary>
        public static string FormatAngleDegrees {
            get {
                return ResourceManager.GetString("FormatAngleDegrees", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}: {1}.
        /// </summary>
        public static string FormatAnnotationItem {
            get {
                return ResourceManager.GetString("FormatAnnotationItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Area: {0:F1} pixels.
        /// </summary>
        public static string FormatAreaPixels {
            get {
                return ResourceManager.GetString("FormatAreaPixels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Area: {0:F3} cm².
        /// </summary>
        public static string FormatAreaSquareCm {
            get {
                return ResourceManager.GetString("FormatAreaSquareCm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Area: {0:F1} mm².
        /// </summary>
        public static string FormatAreaSquareMm {
            get {
                return ResourceManager.GetString("FormatAreaSquareMm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Overlay Plane ({0} #{1}, Fr #{2}).
        /// </summary>
        public static string FormatDefaultMultiFrameOverlayGraphicName {
            get {
                return ResourceManager.GetString("FormatDefaultMultiFrameOverlayGraphicName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Overlay Plane ({0} #{1}).
        /// </summary>
        public static string FormatDefaultSingleFrameOverlayGraphicName {
            get {
                return ResourceManager.GetString("FormatDefaultSingleFrameOverlayGraphicName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на W:{0:0.#} L:{1:0.#}.
        /// </summary>
        public static string FormatDescriptionBasicLinearLut {
            get {
                return ResourceManager.GetString("FormatDescriptionBasicLinearLut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на W:{0:0.#} L:{1:0.#} (Identity).
        /// </summary>
        public static string FormatDescriptionIdentityVoiLinearLut {
            get {
                return ResourceManager.GetString("FormatDescriptionIdentityVoiLinearLut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на W:{0:0.#} L:{1:0.#} (Min/Max).
        /// </summary>
        public static string FormatDescriptionMinMaxCalculatedLinearLut {
            get {
                return ResourceManager.GetString("FormatDescriptionMinMaxCalculatedLinearLut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на [{0}] All Images.
        /// </summary>
        public static string FormatDescriptionModalityDisplaySet {
            get {
                return ResourceManager.GetString("FormatDescriptionModalityDisplaySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Slope: {0:F2} Int.: {1:F2}.
        /// </summary>
        public static string FormatDescriptionModalityLutLinear {
            get {
                return ResourceManager.GetString("FormatDescriptionModalityLutLinear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на W:{0:0.#} L:{1:0.#} ({2}).
        /// </summary>
        public static string FormatDescriptionNamedLinearLut {
            get {
                return ResourceManager.GetString("FormatDescriptionNamedLinearLut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на W:{0:0.#} L:{1:0.#} ({2}).
        /// </summary>
        public static string FormatDescriptionPresentationStateLinearLut {
            get {
                return ResourceManager.GetString("FormatDescriptionPresentationStateLinearLut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reason: {0}.
        /// </summary>
        public static string FormatExceptionReason {
            get {
                return ResourceManager.GetString("FormatExceptionReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:F2} cm.
        /// </summary>
        public static string FormatLengthCm {
            get {
                return ResourceManager.GetString("FormatLengthCm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:F1} mm.
        /// </summary>
        public static string FormatLengthMm {
            get {
                return ResourceManager.GetString("FormatLengthMm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:F1} pixels.
        /// </summary>
        public static string FormatLengthPixels {
            get {
                return ResourceManager.GetString("FormatLengthPixels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mean: {0}.
        /// </summary>
        public static string FormatMean {
            get {
                return ResourceManager.GetString("FormatMean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} : {1}.
        /// </summary>
        public static string FormatMouseButtonShortcutDescription {
            get {
                return ResourceManager.GetString("FormatMouseButtonShortcutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The mouse tool does not have a shortcut assignment ({0}).  The tool cannot be activated..
        /// </summary>
        public static string FormatMouseToolHasNoAssignment {
            get {
                return ResourceManager.GetString("FormatMouseToolHasNoAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The mouse tool has an invalid shortcut assignment ({0})..
        /// </summary>
        public static string FormatMouseToolInvalidAssignment {
            get {
                return ResourceManager.GetString("FormatMouseToolInvalidAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wheel : {0}.
        /// </summary>
        public static string FormatMouseWheelShortcutDescription {
            get {
                return ResourceManager.GetString("FormatMouseWheelShortcutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на [{0}] All Images.
        /// </summary>
        public static string FormatNameModalityDisplaySet {
            get {
                return ResourceManager.GetString("FormatNameModalityDisplaySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reason: {0}.
        /// </summary>
        public static string FormatReason {
            get {
                return ResourceManager.GetString("FormatReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Std Dev: {0}.
        /// </summary>
        public static string FormatStdDev {
            get {
                return ResourceManager.GetString("FormatStdDev", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error:.
        /// </summary>
        public static string LabelError {
            get {
                return ResourceManager.GetString("LabelError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на USER.
        /// </summary>
        public static string LabelPresentationVoiDataLut {
            get {
                return ResourceManager.GetString("LabelPresentationVoiDataLut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на USER.
        /// </summary>
        public static string LabelPresentationVoiLinearLut {
            get {
                return ResourceManager.GetString("LabelPresentationVoiLinearLut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1/cm.
        /// </summary>
        public static string LabelUnits1cm {
            get {
                return ResourceManager.GetString("LabelUnits1cm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bq/ml.
        /// </summary>
        public static string LabelUnitsBqml {
            get {
                return ResourceManager.GetString("LabelUnitsBqml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на cm².
        /// </summary>
        public static string LabelUnitsCm2 {
            get {
                return ResourceManager.GetString("LabelUnitsCm2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на cm²/ml.
        /// </summary>
        public static string LabelUnitsCm2ml {
            get {
                return ResourceManager.GetString("LabelUnitsCm2ml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на counts.
        /// </summary>
        public static string LabelUnitsCnts {
            get {
                return ResourceManager.GetString("LabelUnitsCnts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на counts/s.
        /// </summary>
        public static string LabelUnitsCps {
            get {
                return ResourceManager.GetString("LabelUnitsCps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на g/ml.
        /// </summary>
        public static string LabelUnitsGml {
            get {
                return ResourceManager.GetString("LabelUnitsGml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на HU.
        /// </summary>
        public static string LabelUnitsHU {
            get {
                return ResourceManager.GetString("LabelUnitsHU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на mg/min/ml.
        /// </summary>
        public static string LabelUnitsMgminml {
            get {
                return ResourceManager.GetString("LabelUnitsMgminml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ml/g.
        /// </summary>
        public static string LabelUnitsMlg {
            get {
                return ResourceManager.GetString("LabelUnitsMlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ml/min/g.
        /// </summary>
        public static string LabelUnitsMlming {
            get {
                return ResourceManager.GetString("LabelUnitsMlming", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ml/min/ml.
        /// </summary>
        public static string LabelUnitsMlminml {
            get {
                return ResourceManager.GetString("LabelUnitsMlminml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ml/ml.
        /// </summary>
        public static string LabelUnitsMlml {
            get {
                return ResourceManager.GetString("LabelUnitsMlml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на mm².
        /// </summary>
        public static string LabelUnitsMm2 {
            get {
                return ResourceManager.GetString("LabelUnitsMm2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1/1000 OD.
        /// </summary>
        public static string LabelUnitsOD {
            get {
                return ResourceManager.GetString("LabelUnitsOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на %.
        /// </summary>
        public static string LabelUnitsPcnt {
            get {
                return ResourceManager.GetString("LabelUnitsPcnt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на pixels.
        /// </summary>
        public static string LabelUnitsPixels {
            get {
                return ResourceManager.GetString("LabelUnitsPixels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на prop. to counts.
        /// </summary>
        public static string LabelUnitsPropcnts {
            get {
                return ResourceManager.GetString("LabelUnitsPropcnts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на prop. to counts/s.
        /// </summary>
        public static string LabelUnitsPropcps {
            get {
                return ResourceManager.GetString("LabelUnitsPropcps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на σ.
        /// </summary>
        public static string LabelUnitsStddev {
            get {
                return ResourceManager.GetString("LabelUnitsStddev", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на µmol/min/ml.
        /// </summary>
        public static string LabelUnitsUmolminml {
            get {
                return ResourceManager.GetString("LabelUnitsUmolminml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на µmol/ml.
        /// </summary>
        public static string LabelUnitsUmolml {
            get {
                return ResourceManager.GetString("LabelUnitsUmolml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        public static string LabelUnitsUnspecified {
            get {
                return ResourceManager.GetString("LabelUnitsUnspecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unknown.
        /// </summary>
        public static string LabelUnknown {
            get {
                return ResourceManager.GetString("LabelUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unknown.
        /// </summary>
        public static string LabelUnknownServer {
            get {
                return ResourceManager.GetString("LabelUnknownServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete Vertex.
        /// </summary>
        public static string MenuDeleteVertex {
            get {
                return ResourceManager.GetString("MenuDeleteVertex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Edit.
        /// </summary>
        public static string MenuEditText {
            get {
                return ResourceManager.GetString("MenuEditText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Insert Vertex.
        /// </summary>
        public static string MenuInsertVertex {
            get {
                return ResourceManager.GetString("MenuInsertVertex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rename.
        /// </summary>
        public static string MenuRename {
            get {
                return ResourceManager.GetString("MenuRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show Analysis.
        /// </summary>
        public static string MenuShowAnalysis {
            get {
                return ResourceManager.GetString("MenuShowAnalysis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please contact your PACS administrator for assistance..
        /// </summary>
        public static string MessageContactPacsAdmin {
            get {
                return ResourceManager.GetString("MessageContactPacsAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error has occured while attempting to clone a display set.  Please check the log for more details..
        /// </summary>
        public static string MessageErrorCloningDisplaySet {
            get {
                return ResourceManager.GetString("MessageErrorCloningDisplaySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error has occured while attempting to clone an image.  Please check the log for more details..
        /// </summary>
        public static string MessageErrorCloningPresentationImage {
            get {
                return ResourceManager.GetString("MessageErrorCloningPresentationImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на One or more overlays
        ///cannot be displayed.
        ///Use image with caution..
        /// </summary>
        public static string MessageErrorDisplayingOverlays {
            get {
                return ResourceManager.GetString("MessageErrorDisplayingOverlays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An unrecoverable error occurred while attempting to load the text overlay.  Please see the log for details..
        /// </summary>
        public static string MessageErrorLoadingAnnotationLayout {
            get {
                return ResourceManager.GetString("MessageErrorLoadingAnnotationLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occurred while trying to add graphics from the image header.  Some or all of them will not appear..
        /// </summary>
        public static string MessageFailedToApplyDicomHeaderGraphics {
            get {
                return ResourceManager.GetString("MessageFailedToApplyDicomHeaderGraphics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ClearCanvas was only able to load {0} of the {1} images you requested..
        /// </summary>
        public static string MessageFormatLoadStudyIncomplete {
            get {
                return ResourceManager.GetString("MessageFormatLoadStudyIncomplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Opening {0} of {1} images.
        /// </summary>
        public static string MessageFormatOpeningImages {
            get {
                return ResourceManager.GetString("MessageFormatOpeningImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}
        ///{1}.
        /// </summary>
        public static string MessageFormatStudyNotLoadable {
            get {
                return ResourceManager.GetString("MessageFormatStudyNotLoadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} studies were only partially loaded..
        /// </summary>
        public static string MessageFormatXStudiesIncomplete {
            get {
                return ResourceManager.GetString("MessageFormatXStudiesIncomplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} studies are in use..
        /// </summary>
        public static string MessageFormatXStudiesInUse {
            get {
                return ResourceManager.GetString("MessageFormatXStudiesInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} studies are nearline..
        /// </summary>
        public static string MessageFormatXStudiesNearline {
            get {
                return ResourceManager.GetString("MessageFormatXStudiesNearline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} studies were not found..
        /// </summary>
        public static string MessageFormatXStudiesNotFound {
            get {
                return ResourceManager.GetString("MessageFormatXStudiesNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} studies could not be loaded..
        /// </summary>
        public static string MessageFormatXStudiesNotLoaded {
            get {
                return ResourceManager.GetString("MessageFormatXStudiesNotLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} studies are offline..
        /// </summary>
        public static string MessageFormatXStudiesOffline {
            get {
                return ResourceManager.GetString("MessageFormatXStudiesOffline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The study is on a non-streaming server and must be retrieved and reopened..
        /// </summary>
        public static string MessageInfoNoStudyLoader {
            get {
                return ResourceManager.GetString("MessageInfoNoStudyLoader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The study could not be loaded.  Please contact your PACS administrator..
        /// </summary>
        public static string MessageInfoStudyCouldNotBeLoaded {
            get {
                return ResourceManager.GetString("MessageInfoStudyCouldNotBeLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The study is in use.  Please close the current study, wait a few minutes, then try loading the study again..
        /// </summary>
        public static string MessageInfoStudyInUse {
            get {
                return ResourceManager.GetString("MessageInfoStudyInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The study is nearline.  If your PACS is a ClearCanvas ImageServer, please try opening the study manually, then wait a few minutes before trying again.
        ///Alternately, the study can be brought back online by a PACS administrator..
        /// </summary>
        public static string MessageInfoStudyNearline {
            get {
                return ResourceManager.GetString("MessageInfoStudyNearline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The study is offline and must be brought back online by a PACS administrator..
        /// </summary>
        public static string MessageInfoStudyOffline {
            get {
                return ResourceManager.GetString("MessageInfoStudyOffline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error has occurred while deserializing the key object selection document..
        /// </summary>
        public static string MessageKeyObjectDeserializeFailure {
            get {
                return ResourceManager.GetString("MessageKeyObjectDeserializeFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The following failures occurred while loading studies:.
        /// </summary>
        public static string MessageLoadMultipleStudiesFailurePrefix {
            get {
                return ResourceManager.GetString("MessageLoadMultipleStudiesFailurePrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ClearCanvas was unable to load any of the images you requested..
        /// </summary>
        public static string MessageLoadStudyCompleteFailure {
            get {
                return ResourceManager.GetString("MessageLoadStudyCompleteFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The study is being processed by the server and cannot be loaded at this time.  Please try again later..
        /// </summary>
        public static string MessageLoadStudyFailedInUse {
            get {
                return ResourceManager.GetString("MessageLoadStudyFailedInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The study is currently being restored from archive and cannot be loaded at this time.  Please try again later..
        /// </summary>
        public static string MessageLoadStudyFailedNearline {
            get {
                return ResourceManager.GetString("MessageLoadStudyFailedNearline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The study is nearline and cannot be restored at this time.  Please contact your PACS administrator to restore the study..
        /// </summary>
        public static string MessageLoadStudyFailedNearlineNoRestore {
            get {
                return ResourceManager.GetString("MessageLoadStudyFailedNearlineNoRestore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The study could not be found..
        /// </summary>
        public static string MessageLoadStudyFailedNotFound {
            get {
                return ResourceManager.GetString("MessageLoadStudyFailedNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The study cannot be loaded because it is offline. Please contact your PACS administrator to restore the study..
        /// </summary>
        public static string MessageLoadStudyFailedOffline {
            get {
                return ResourceManager.GetString("MessageLoadStudyFailedOffline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No renderer plugins exist; defaulting to GDI renderer..
        /// </summary>
        public static string MessageNoRendererPluginsExist {
            get {
                return ResourceManager.GetString("MessageNoRendererPluginsExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No images could be loaded for display..
        /// </summary>
        public static string MessageNoVisibleDisplaySets {
            get {
                return ResourceManager.GetString("MessageNoVisibleDisplaySets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на One study was only partially loaded..
        /// </summary>
        public static string MessageOneStudyIncomplete {
            get {
                return ResourceManager.GetString("MessageOneStudyIncomplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на One study is in use..
        /// </summary>
        public static string MessageOneStudyInUse {
            get {
                return ResourceManager.GetString("MessageOneStudyInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на One study is nearline..
        /// </summary>
        public static string MessageOneStudyNearline {
            get {
                return ResourceManager.GetString("MessageOneStudyNearline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на One study was not found..
        /// </summary>
        public static string MessageOneStudyNotFound {
            get {
                return ResourceManager.GetString("MessageOneStudyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на One study could not be loaded..
        /// </summary>
        public static string MessageOneStudyNotLoaded {
            get {
                return ResourceManager.GetString("MessageOneStudyNotLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на One study is offline..
        /// </summary>
        public static string MessageOneStudyOffline {
            get {
                return ResourceManager.GetString("MessageOneStudyOffline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error has occured while attempting to load a presentation state. The presentation state may not have been loaded in its entirety. Please check the log for more details..
        /// </summary>
        public static string MessagePresentationStateApplicationFailure {
            get {
                return ResourceManager.GetString("MessagePresentationStateApplicationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error has occurred while deserializing the image presentation state..
        /// </summary>
        public static string MessagePresentationStateDeserializeFailure {
            get {
                return ResourceManager.GetString("MessagePresentationStateDeserializeFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error has occured while attempting to read a presentation state file. Please check the log for more details..
        /// </summary>
        public static string MessagePresentationStateReadFailure {
            get {
                return ResourceManager.GetString("MessagePresentationStateReadFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The referenced key image was found, but does not contain the specified frame..
        /// </summary>
        public static string MessageReferencedKeyImageFrameNotFound {
            get {
                return ResourceManager.GetString("MessageReferencedKeyImageFrameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The referenced key image could not be displayed because it is not part of the loaded study..
        /// </summary>
        public static string MessageReferencedKeyImageFromOtherStudy {
            get {
                return ResourceManager.GetString("MessageReferencedKeyImageFromOtherStudy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error has occurred in the rendering pipeline..
        /// </summary>
        public static string MessageRenderingPipelineFailure {
            get {
                return ResourceManager.GetString("MessageRenderingPipelineFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error has occurred while analyzing the Roi.
        ///Please check the log for more details..
        /// </summary>
        public static string MessageRoiAnalysisError {
            get {
                return ResourceManager.GetString("MessageRoiAnalysisError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unsupported Image Type: {0}.
        /// </summary>
        public static string MessageUnsupportedImageType {
            get {
                return ResourceManager.GetString("MessageUnsupportedImageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The selected images are of an unsupported type. MPR only supports DICOM image SOPs..
        /// </summary>
        public static string MessageVolumeSourceAreNotSupported {
            get {
                return ResourceManager.GetString("MessageVolumeSourceAreNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Each frame in the source dataset must be of the same anatomical laterality..
        /// </summary>
        public static string MessageVolumeSourceInconsistentImageLaterality {
            get {
                return ResourceManager.GetString("MessageVolumeSourceInconsistentImageLaterality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Each frame in the source dataset must be in the same pixel units..
        /// </summary>
        public static string MessageVolumeSourceInconsistentRescaleUnits {
            get {
                return ResourceManager.GetString("MessageVolumeSourceInconsistentRescaleUnits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The selected images have a gantry slew. MPR only supports gantry tilts..
        /// </summary>
        public static string MessageVolumeSourceMayBotBeGantrySlewed {
            get {
                return ResourceManager.GetString("MessageVolumeSourceMayBotBeGantrySlewed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The selected images have an anisotropic pixel aspect ratio. MPR only supports 1:1 isotropic aspect ratios..
        /// </summary>
        public static string MessageVolumeSourceMayNotHaveAnisotropicPixels {
            get {
                return ResourceManager.GetString("MessageVolumeSourceMayNotHaveAnisotropicPixels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Source dataset must contain at least three frames..
        /// </summary>
        public static string MessageVolumeSourceMinimumThreeImages {
            get {
                return ResourceManager.GetString("MessageVolumeSourceMinimumThreeImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MPR only supports 16-bit greyscale images..
        /// </summary>
        public static string MessageVolumeSourceMustBe16BitGreyscale {
            get {
                return ResourceManager.GetString("MessageVolumeSourceMustBe16BitGreyscale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The selected images must be calibrated..
        /// </summary>
        public static string MessageVolumeSourceMustBeCalibrated {
            get {
                return ResourceManager.GetString("MessageVolumeSourceMustBeCalibrated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Inconsistent spacing between images. MPR requires evenly spaced images..
        /// </summary>
        public static string MessageVolumeSourceMustBeEvenlySpacedForMpr {
            get {
                return ResourceManager.GetString("MessageVolumeSourceMustBeEvenlySpacedForMpr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Each frame in the source dataset must have the same image orientation (Patient)..
        /// </summary>
        public static string MessageVolumeSourceMustBeSameImageOrientationPatient {
            get {
                return ResourceManager.GetString("MessageVolumeSourceMustBeSameImageOrientationPatient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Each frame in the source dataset must have the same frame of reference..
        /// </summary>
        public static string MessageVolumeSourceMustBeSingleFrameOfReference {
            get {
                return ResourceManager.GetString("MessageVolumeSourceMustBeSingleFrameOfReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Each frame in the source dataset must be from the same series..
        /// </summary>
        public static string MessageVolumeSourceMustBeSingleSeries {
            get {
                return ResourceManager.GetString("MessageVolumeSourceMustBeSingleSeries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Each frame in the source dataset must be from the same study..
        /// </summary>
        public static string MessageVolumeSourceMustBeSingleStudy {
            get {
                return ResourceManager.GetString("MessageVolumeSourceMustBeSingleStudy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Two images are at same patient location. MPR requires evenly spaced images..
        /// </summary>
        public static string MessageVolumeSourceMustBeUniquelyLocatedForMpr {
            get {
                return ResourceManager.GetString("MessageVolumeSourceMustBeUniquelyLocatedForMpr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Each frame in the source dataset must have a defined image orientation (Patient)..
        /// </summary>
        public static string MessageVolumeSourceMustDefineImageOrientationPatient {
            get {
                return ResourceManager.GetString("MessageVolumeSourceMustDefineImageOrientationPatient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Each frame in the source dataset must specify a frame of reference..
        /// </summary>
        public static string MessageVolumeSourceMustSpecifyFrameOfReference {
            get {
                return ResourceManager.GetString("MessageVolumeSourceMustSpecifyFrameOfReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An unexpected exception was encountered while creating the volume..
        /// </summary>
        public static string MessageVolumeSourceUnexpectedException {
            get {
                return ResourceManager.GetString("MessageVolumeSourceUnexpectedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Visible Display Set.
        /// </summary>
        public static string NamePrefetchingStrategyVisibleDisplaySet {
            get {
                return ResourceManager.GetString("NamePrefetchingStrategyVisibleDisplaySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на -.
        /// </summary>
        public static string SeparatorPatientDescription {
            get {
                return ResourceManager.GetString("SeparatorPatientDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ::.
        /// </summary>
        public static string SeparatorPatientsLoaded {
            get {
                return ResourceManager.GetString("SeparatorPatientsLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на N/A.
        /// </summary>
        public static string StringNotApplicable {
            get {
                return ResourceManager.GetString("StringNotApplicable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ---.
        /// </summary>
        public static string StringNoValue {
            get {
                return ResourceManager.GetString("StringNoValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Key Images.
        /// </summary>
        public static string SuffixFormatKeyImageDisplaySet {
            get {
                return ResourceManager.GetString("SuffixFormatKeyImageDisplaySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Echo #{0}.
        /// </summary>
        public static string SuffixFormatMREchoDisplaySet {
            get {
                return ResourceManager.GetString("SuffixFormatMREchoDisplaySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Multiframe #{0}.
        /// </summary>
        public static string SuffixFormatMultiframeDisplaySet {
            get {
                return ResourceManager.GetString("SuffixFormatMultiframeDisplaySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stack {0}.
        /// </summary>
        public static string SuffixFormatMultiframeStackDisplaySet {
            get {
                return ResourceManager.GetString("SuffixFormatMultiframeStackDisplaySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Image/Frame#: {0}/{1}.
        /// </summary>
        public static string SuffixFormatSingleFrameDisplaySet {
            get {
                return ResourceManager.GetString("SuffixFormatSingleFrameDisplaySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Image #{0}.
        /// </summary>
        public static string SuffixFormatSingleImageDisplaySet {
            get {
                return ResourceManager.GetString("SuffixFormatSingleImageDisplaySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} (Image# {1}).
        /// </summary>
        public static string SuffixFormatSingleImageDisplaySetWithLateralityViewPosition {
            get {
                return ResourceManager.GetString("SuffixFormatSingleImageDisplaySetWithLateralityViewPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Series/Image/Frame: {0}/{1}/{2}.
        /// </summary>
        public static string SuffixFormatSingleReferencedFrameDisplaySet {
            get {
                return ResourceManager.GetString("SuffixFormatSingleReferencedFrameDisplaySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Series/Image#: {0}/{1}.
        /// </summary>
        public static string SuffixFormatSingleReferencedImageDisplaySet {
            get {
                return ResourceManager.GetString("SuffixFormatSingleReferencedImageDisplaySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} (Series/Image#: {1}/{2}).
        /// </summary>
        public static string SuffixFormatSingleReferencedImageDisplaySetWithLateralityViewPosition {
            get {
                return ResourceManager.GetString("SuffixFormatSingleReferencedImageDisplaySetWithLateralityViewPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Single images.
        /// </summary>
        public static string SuffixSingleImagesDisplaySet {
            get {
                return ResourceManager.GetString("SuffixSingleImagesDisplaySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на -.
        /// </summary>
        public static string ValueNil {
            get {
                return ResourceManager.GetString("ValueNil", resourceCulture);
            }
        }
    }
}
